#!/bin/bash

CACHE_DIR=~/.cache/manga-check
[ -d $CACHE_DIR ] || mkdir -p $CACHE_DIR
[ -f extension.sh ] && source ./extension.sh

usage() {
  cat <<EOM
Usage:
  manga-check init
  manga-check run
EOM
  exit
}

config() {
  cat config.yml |
    sed '/^#/d; s/[ \t]#.*//g' |
    awk '
      function flush() {
        if (name != "" && url != "" && type != "" && pattern != "") {
          print name
          print url
          print type
          print pattern
          print notify_url == "" ? url : notify_url
        }
        name = ""
        url = ""
        notify_url = ""
        type = ""
        pattern = ""
      }
      /^-/ { flush() }
      /^[- ]*name *:/ { name = $0 }
      /^[- ]*url *:/ { url = $0 }
      /^[- ]*notify_url *:/ { notify_url = $0 }
      /^[- ]*html *:/ {
        type = "html"
        pattern = $0
      }
      /^[- ]*json *:/ {
        type = "json"
        pattern = $0
      }
      END { flush() }
    ' |
      sed 's/^[- ]*[a-zA-Z0-9_]* *:  *//g'
}

hashcode() {
  md5sum | grep -o '[0-9a-f]*'
}

extract() {
  URL="$1"
  TYPE="$2"
  PATTERN="$3"
  case "$TYPE" in
    html )
      curl -sL "$URL" | web-grep "$PATTERN"
      ;;
    json )
      curl -sL "$URL" | jq "$PATTERN"
      ;;
  esac
}

init() {
  [ -d $CACHE_DIR ] && rm -r $CACHE_DIR
  mkdir -p $CACHE_DIR
  config |
    while read name; do
      read url
      read ty
      read pat
      read notify_url
      F="$CACHE_DIR/$(echo $name | hashcode)"
      extract "$url" "$ty" "$pat" > $F
      cat <<EOM
[$(date)] init
Name: $name
Url: $url
Extract Type: $ty
Pattern: $pat
Matched:
---
$(cat $F)
---
Cache saved as $F

EOM
    done
}

check() {
  config |
    while read name; do
      read url
      read ty
      read pat
      read notify_url
      F="$CACHE_DIR/$(echo $name | hashcode)"
      F_NEW="$CACHE_DIR/$(echo $name | hashcode)-new"
      extract "$url" "$ty" "$pat" > $F_NEW
      echo -n "[$(date)] $url ... "
      if diff $F $F_NEW > /dev/null; then
        echo "No Update"
      else
        echo "Updated!!"
        diff $F $F_NEW
        notify "$name" "$notify_url" "$F_NEW"
      fi
      mv $F_NEW $F
    done
}

notify() {
    NAME="$1"
    URL="$2"
    DIFF="$3"
    tw --by ampeloss "@cdddar @ampeloss Check $NAME $URL
$(cat $DIFF)"

    if [ -n "$SLACK_WEBHOOK" ]; then
      qj -e .channel=#manga .username=mangabot .text="Check $NAME $URL $(printf "\n ") $(cat $DIFF)" .icon_emoji=:books: |
        curl -X POST --data @- $SLACK_WEBHOOK
    fi

}

run() {
    while :; do
        check
        sleep 30m
    done
}

[ $# -eq 0 ] && usage
case "$1" in
  init )
    init
    ;;
  check )
    check
    ;;
  run )
    run
    ;;
  help | --help | -h )
    usage
    ;;
esac
